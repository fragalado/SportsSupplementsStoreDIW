// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240124135050_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Acceso", b =>
                {
                    b.Property<long>("id_acceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_acceso"));

                    b.Property<string>("cod_acceso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("desc_acceso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_acceso");

                    b.ToTable("Accesos");
                });

            modelBuilder.Entity("DAL.Carrito", b =>
                {
                    b.Property<long>("id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_carrito"));

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.Property<long>("id_suplemento")
                        .HasColumnType("bigint");

                    b.Property<long>("id_usuario")
                        .HasColumnType("bigint");

                    b.HasKey("id_carrito");

                    b.HasIndex("id_suplemento");

                    b.HasIndex("id_usuario");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("DAL.Orden", b =>
                {
                    b.Property<long>("id_orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_orden"));

                    b.Property<DateTime>("fch_orden")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("id_usuario")
                        .HasColumnType("bigint");

                    b.Property<float>("precio_orden")
                        .HasColumnType("real");

                    b.HasKey("id_orden");

                    b.HasIndex("id_usuario");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("DAL.Rel_Orden_Carrito", b =>
                {
                    b.Property<long>("id_rel_orden_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_rel_orden_carrito"));

                    b.Property<long?>("carritoid_carrito")
                        .HasColumnType("bigint");

                    b.Property<long>("id_carrito")
                        .HasColumnType("bigint");

                    b.Property<long>("id_orden")
                        .HasColumnType("bigint");

                    b.HasKey("id_rel_orden_carrito");

                    b.HasIndex("carritoid_carrito");

                    b.HasIndex("id_orden");

                    b.ToTable("Rel_Orden_Carritos");
                });

            modelBuilder.Entity("DAL.Suplemento", b =>
                {
                    b.Property<long>("id_suplemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_suplemento"));

                    b.Property<string>("desc_suplemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("marca_suplemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre_suplemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("precio_suplemento")
                        .HasColumnType("bigint");

                    b.Property<string>("tipo_suplemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_suplemento");

                    b.ToTable("Suplementos");
                });

            modelBuilder.Entity("DAL.Token_Tabla", b =>
                {
                    b.Property<long>("id_token")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_token"));

                    b.Property<string>("cod_token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fch_fin_token")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("id_usuario")
                        .HasColumnType("bigint");

                    b.HasKey("id_token");

                    b.HasIndex("id_usuario");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("DAL.Usuario", b =>
                {
                    b.Property<long>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id_usuario"));

                    b.Property<string>("email_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("estaActivado_usuario")
                        .HasColumnType("boolean");

                    b.Property<long>("id_acceso")
                        .HasColumnType("bigint");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("psswd_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tlf_usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_usuario");

                    b.HasIndex("id_acceso");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DAL.Carrito", b =>
                {
                    b.HasOne("DAL.Suplemento", "suplemento")
                        .WithMany("listaCarrito")
                        .HasForeignKey("id_suplemento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Usuario", "usuario")
                        .WithMany("listaCarrito")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("suplemento");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("DAL.Orden", b =>
                {
                    b.HasOne("DAL.Usuario", "usuario")
                        .WithMany("listaOrden")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("DAL.Rel_Orden_Carrito", b =>
                {
                    b.HasOne("DAL.Carrito", "carrito")
                        .WithMany("listaRelacionOrdenCarrito")
                        .HasForeignKey("carritoid_carrito");

                    b.HasOne("DAL.Orden", "orden")
                        .WithMany("listaRelacionOrdenCarrito")
                        .HasForeignKey("id_orden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carrito");

                    b.Navigation("orden");
                });

            modelBuilder.Entity("DAL.Token_Tabla", b =>
                {
                    b.HasOne("DAL.Usuario", "usuario")
                        .WithMany("listaToken")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("DAL.Usuario", b =>
                {
                    b.HasOne("DAL.Acceso", "acceso")
                        .WithMany("listaUsuarios")
                        .HasForeignKey("id_acceso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("acceso");
                });

            modelBuilder.Entity("DAL.Acceso", b =>
                {
                    b.Navigation("listaUsuarios");
                });

            modelBuilder.Entity("DAL.Carrito", b =>
                {
                    b.Navigation("listaRelacionOrdenCarrito");
                });

            modelBuilder.Entity("DAL.Orden", b =>
                {
                    b.Navigation("listaRelacionOrdenCarrito");
                });

            modelBuilder.Entity("DAL.Suplemento", b =>
                {
                    b.Navigation("listaCarrito");
                });

            modelBuilder.Entity("DAL.Usuario", b =>
                {
                    b.Navigation("listaCarrito");

                    b.Navigation("listaOrden");

                    b.Navigation("listaToken");
                });
#pragma warning restore 612, 618
        }
    }
}
